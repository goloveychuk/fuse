# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Swift

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-22.04-arm]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo apt install meson ninja-build
    - name: Install upx
      run: |
        ARCH=$(uname -m)
        if [ "$ARCH" = "x86_64" ]; then
          UPX_ARCH="amd64_linux"
        elif [ "$ARCH" = "aarch64" ] || [ "$ARCH" = "arm64" ]; then
          UPX_ARCH="arm64_linux"
        else
          echo "Unsupported architecture: $ARCH"
          exit 1
        fi
        
        echo "Using UPX architecture: $UPX_ARCH"
        wget https://github.com/upx/upx/releases/download/v5.0.1/upx-5.0.1-${UPX_ARCH}.tar.xz
        tar -xf upx-5.0.1-${UPX_ARCH}.tar.xz
        sudo cp upx-5.0.1-${UPX_ARCH}/upx /usr/local/bin/
        sudo chmod +x /usr/local/bin/upx
        
    - name: Build libfuse
      working-directory: "fskit"
      run: |
        # sudo apt install libfuse3-dev fuse3

        # swift sdk install https://download.swift.org/swift-6.1.2-release/static-sdk/swift-6.1.2-RELEASE/swift-6.1.2-RELEASE_static-linux-0.0.1.artifactbundle.tar.gz --checksum df0b40b9b582598e7e3d70c82ab503fd6fbfdff71fd17e7f1ab37115a0665b3b
        sudo apt install meson ninja-build
        ./build_libfuse.sh


    - name: Build
      # run: swift build --swift-sdk x86_64-swift-linux-musl
      run: swift build --static-swift-stdlib -c release
      working-directory: "fskit"
    - name: Compress
      run: upx -9 .build/release/Fuse
      working-directory: "fskit"

    - name: upload
      uses: actions/upload-artifact@v4
      with:
        name: fskit-${{ matrix.arch }}
        path: fskit/.build/release/Fuse

    # - name: Run tests
    #   run: swift test -v